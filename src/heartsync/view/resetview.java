/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package heartsync.view;

import javax.swing.JOptionPane;
import heartsync.controller.ResetController;
import javax.swing.JPasswordField;

/**
 *
 * @author HP
 */
public class resetview extends javax.swing.JFrame {
    private ResetController controller;

    /**
     * Creates new form resetview
     */
    public resetview() {
        initComponents();
        setupComponents();
    }

    public void setController(ResetController controller) {
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        newpassword = new javax.swing.JPasswordField();
        confirmpassword = new javax.swing.JPasswordField();
        Continue = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        newPasswordLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        // Main panel with soft pink background
        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 250));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Labels styling
        newPasswordLabel.setText("New password");
        newPasswordLabel.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12));
        newPasswordLabel.setForeground(new java.awt.Color(51, 51, 51));

        confirmPasswordLabel.setText("Confirm password");
        confirmPasswordLabel.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12));
        confirmPasswordLabel.setForeground(new java.awt.Color(51, 51, 51));

        // Password fields styling
        ((JPasswordField)newpassword).setEchoChar('•');
        newpassword.setFont(new java.awt.Font("Segoe UI", 0, 14));
        newpassword.setForeground(new java.awt.Color(51, 51, 51));
        newpassword.setMargin(new java.awt.Insets(2, 5, 2, 5));

        ((JPasswordField)confirmpassword).setEchoChar('•');
        confirmpassword.setFont(new java.awt.Font("Segoe UI", 0, 14));
        confirmpassword.setForeground(new java.awt.Color(51, 51, 51));
        confirmpassword.setMargin(new java.awt.Insets(2, 5, 2, 5));

        // Button styling
        Continue.setText("Continue->");
        Continue.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 12));
        Continue.setBackground(new java.awt.Color(255, 102, 102));
        Continue.setForeground(java.awt.Color.WHITE);
        Continue.setBorderPainted(false);
        Continue.setFocusPainted(false);
        Continue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        Back.setText("<-Back");
        Back.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 12));
        Back.setBackground(new java.awt.Color(255, 255, 255));
        Back.setForeground(new java.awt.Color(255, 102, 102));
        Back.setBorderPainted(false);
        Back.setFocusPainted(false);
        Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        // Radio button styling
        jRadioButton1.setText("show");
        jRadioButton1.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12));
        jRadioButton1.setBackground(new java.awt.Color(255, 204, 204));
        jRadioButton1.setForeground(new java.awt.Color(51, 51, 51));
        jRadioButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton1.setFocusPainted(false);
        jRadioButton1.addActionListener(evt -> togglePasswordVisibility((JPasswordField)confirmpassword, jRadioButton1));

        jRadioButton2.setText("show");
        jRadioButton2.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12));
        jRadioButton2.setBackground(new java.awt.Color(255, 204, 204));
        jRadioButton2.setForeground(new java.awt.Color(51, 51, 51));
        jRadioButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton2.setFocusPainted(false);
        jRadioButton2.addActionListener(evt -> togglePasswordVisibility((JPasswordField)newpassword, jRadioButton2));

        // Title styling
        jLabel1.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 16));
        jLabel1.setForeground(new java.awt.Color(255, 102, 102));
        jLabel1.setText("RESET PASSWORD");
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newPasswordLabel)
                    .addComponent(confirmPasswordLabel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton1))))
                .addGap(30, 30, 30))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(Continue)
                .addGap(18, 18, 18)
                .addComponent(Back)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(newPasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(newpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(confirmPasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(confirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Continue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        // Additional radio button styling
        jRadioButton1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRadioButton2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRadioButton1.setPreferredSize(new java.awt.Dimension(50, 30));
        jRadioButton2.setPreferredSize(new java.awt.Dimension(50, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newpasswordActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void setupComponents() {
        // Set initial properties for password fields
        newpassword.setEchoChar('•');
        confirmpassword.setEchoChar('•');
        
        // Set placeholder tooltips
        newpassword.setToolTipText("Enter new password");
        confirmpassword.setToolTipText("Confirm your new password");
        
        // Add action listeners for buttons
        Continue.addActionListener(e -> handleContinueButton());
        Back.addActionListener(e -> handleBackButton());
        
        // Add action listeners for radio buttons
        jRadioButton2.addActionListener(e -> togglePasswordVisibility(newpassword, jRadioButton2));
        jRadioButton1.addActionListener(e -> togglePasswordVisibility(confirmpassword, jRadioButton1));
    }
    
    private void togglePasswordVisibility(JPasswordField passwordField, javax.swing.JRadioButton button) {
        if (button.isSelected()) {
            // Show password
            passwordField.setEchoChar((char) 0);
        } else {
            // Hide password with bullet point
            passwordField.setEchoChar('•');
        }
    }
    
    private void handleContinueButton() {
        char[] newPassChars = newpassword.getPassword();
        char[] confirmPassChars = confirmpassword.getPassword();
        
        String newPass = new String(newPassChars);
        String confirmPass = new String(confirmPassChars);
        
        // Validate password
        if (newPass.isEmpty() || confirmPass.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "Please fill in all fields", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check minimum length
        if (newPass.length() < 8) {
            JOptionPane.showMessageDialog(this, 
                "Password must be at least 8 characters long", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check for at least one number
        if (!newPass.matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(this, 
                "Password must contain at least one number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check for at least one uppercase letter
        if (!newPass.matches(".*[A-Z].*")) {
            JOptionPane.showMessageDialog(this, 
                "Password must contain at least one uppercase letter", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (!newPass.equals(confirmPass)) {
            JOptionPane.showMessageDialog(this, 
                "Passwords do not match", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Show success message and handle password reset
        boolean resetSuccess = true;
        if (controller != null) {
            resetSuccess = controller.resetPassword(newPass);
        }
        
        if (resetSuccess) {
            JOptionPane.showMessageDialog(this, 
                "Your password is reset!", 
                "Success", 
                JOptionPane.INFORMATION_MESSAGE);
            this.dispose(); // Close the window after successful reset
        }
        
        // Clear the password arrays for security
        java.util.Arrays.fill(newPassChars, '0');
        java.util.Arrays.fill(confirmPassChars, '0');
    }
    
    private void handleBackButton() {
        if (controller != null) {
            controller.goBack();
        } else {
            this.dispose();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(resetview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(resetview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(resetview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(resetview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new resetview().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Continue;
    private javax.swing.JPasswordField confirmpassword;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JPasswordField newpassword;
    private javax.swing.JLabel newPasswordLabel;
    // End of variables declaration//GEN-END:variables
}
